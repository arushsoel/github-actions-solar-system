name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
   MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
   MONGO_USERNAME: superuser
   MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}   
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 20

        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'
            path: ~/.npm  

        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    Code-Coverage-job:
      name: code-coverage-run
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repo
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 18
        
        - name:  npm install
          run: npm install

        - name: run code coverage
          continue-on-error: true
          run: npm run code-coverage  
        
        - name: upload code coverage
          uses: actions/upload-artifact@v3
          with:
            name: code-coverage-Result
            path: coverage
            retention-days: 5
    Docker:
        name: Docker-job 
        runs-on: ubuntu-latest
        needs: [unit-testing, Code-Coverage-job]
        steps:
          - name: Checkout repo
            uses: actions/checkout@v4
          
          - name: Docker login
            uses: docker/login-action@v3
            with:
              registry: ghcr.io
              username: ${{ github.repository_owner }}
              password: ${{ secrets.GITHUB_TOKEN }}
          - name: Docker build and push
            uses: docker/build-push-action@v6
            with:
              push: true
              context: .
              tags: ghcr.io/${{ github.repository_owner}}/solar-system:${{ github.sha }}
        
      
              